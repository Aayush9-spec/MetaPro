{"version":3,"sources":["components/ItemCard.jsx","App.jsx","index.jsx"],"names":["ItemCard","_ref","item","account","buyItem","transferItem","index","toAddress","setToAddress","useState","mounted","setMounted","useEffect","t","setTimeout","Math","min","clearTimeout","idStr","Id","toString","priceStr","price","ethers","utils","formatEther","isOwner","owner","toLowerCase","canBuy","isSold","_jsxs","className","concat","style","animationDelay","children","_jsx","name","seller","onClick","viewBox","xmlns","d","width","placeholder","value","onChange","e","target","contractAddress","process","REACT_APP_CONTRACT_ADDRESS","App","theme","setTheme","localStorage","getItem","document","documentElement","setAttribute","setItem","setAccount","balance","setBalance","contract","setContract","items","setItems","loading","setLoading","query","setQuery","setName","setPrice","ownerAddress","setOwnerAddress","purchaseHistory","setPurchaseHistory","raw","JSON","parse","window","ethereum","alert","loadAllItems","async","marketContract","count","itemCount","toNumber","itemList","i","push","err","console","error","id","itemPrice","tx","gasLimit","txHash","hash","wait","String","find","it","next","date","Date","toISOString","slice","stringify","warn","display","gap","alignItems","toggleTheme","title","_Fragment","provider","providers","Web3Provider","send","signer","getSigner","userAddress","getAddress","balanceWei","getBalance","Contract","MarketPlaceABI","ListItems","parseEther","Array","from","length","map","_","filter","includes","idx","marginBottom","clearHistory","removeItem","p","wordBreak","toLocaleString","ids","getItemByOwner","ownedItems","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1705834f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ethers } from \"ethers\";\n\nexport default function ItemCard({ item, account, buyItem, transferItem, index = 0 }) {\n  const [toAddress, setToAddress] = useState(\"\");\n  const [mounted, setMounted] = useState(false);\n\n  // staggered mount for entrance animation\n  useEffect(() => {\n    const t = setTimeout(() => setMounted(true), Math.min(300, index * 60));\n    return () => clearTimeout(t);\n  }, [index]);\n\n  const idStr = item.Id ? item.Id.toString() : \"-\";\n  const priceStr = item.price ? ethers.utils.formatEther(item.price) : \"0\";\n\n  const isOwner = item.owner && account && item.owner.toLowerCase() === account.toLowerCase();\n  const canBuy = item.owner && account && item.owner.toLowerCase() !== account.toLowerCase() && !item.isSold;\n\n  return (\n  <div className={`item-card ${mounted ? \"enter\" : \"\"}`} style={{ animationDelay: `${index * 60}ms` }}>\n      <div className=\"item-meta\">\n        <div>\n          <div className=\"muted\">ID: {idStr}</div>\n          <div>{item.name}</div>\n        </div>\n        <div className=\"item-price\">{priceStr} FLOW</div>\n      </div>\n\n      <div className=\"muted\">Seller: {item.seller}</div>\n      <div className=\"muted\">Owner: {item.owner}</div>\n      <div className=\"muted\">Sold: {item.isSold ? \"Yes\" : \"No\"}</div>\n\n      <div className=\"item-actions\">\n        {canBuy && (\n          <button className=\"btn\" onClick={() => buyItem(item.Id, item.price)} aria-label={`Buy item ${idStr}`}>\n            <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"><path d=\"M7 4h-2l-1 2H2v2h1l3.6 7.59-1.35 2.44A1 1 0 0 0 5.2 19h12v-2H6.42a.25.25 0 0 1-.23-.14L7.1 16h7.45a1 1 0 0 0 .92-.63l2.58-6.97A1 1 0 0 0 17.1 7H6.21l-.94-2z\"/></svg>\n            Buy\n          </button>\n        )}\n\n        {isOwner && (\n          <div style={{ width: \"100%\" }}>\n            <div className=\"transfer-row\">\n              <input\n                className=\"transfer-input\"\n                placeholder=\"Transfer to\"\n                value={toAddress}\n                onChange={(e) => setToAddress(e.target.value)}\n              />\n              <button\n                className=\"btn ghost\"\n                onClick={() => {\n                  transferItem(item.Id, toAddress);\n                  setToAddress(\"\");\n                }}\n                aria-label={`Transfer item ${idStr}`}\n              >\n                <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"><path d=\"M13 5l7 7-7 7v-4H4v-6h9V5z\"/></svg>\n                Transfer\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nItemCard.propTypes = {\n  item: PropTypes.shape({\n    Id: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n    name: PropTypes.string,\n    price: PropTypes.any,\n    seller: PropTypes.string,\n    owner: PropTypes.string,\n    isSold: PropTypes.bool,\n  }).isRequired,\n  account: PropTypes.string,\n  buyItem: PropTypes.func.isRequired,\n  transferItem: PropTypes.func.isRequired,\n  index: PropTypes.number,\n};","import { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport MarketPlaceABI from \"./MarketPlace.json\";\nimport ItemCard from \"./components/ItemCard\";\n\n// Read contract address from environment (REACT_APP_CONTRACT_ADDRESS) with a fallback\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS || \"0xe9420DC12546ACB7ae36FeAb7739dF5a2adC2180\";\n\nfunction App() {\n  const [theme, setTheme] = useState(() => {\n    try {\n      return localStorage.getItem(\"theme\") || \"dark\";\n    } catch (e) {\n      return \"dark\";\n    }\n  });\n\n  useEffect(() => {\n    try {\n      document.documentElement.setAttribute(\"data-theme\", theme);\n      localStorage.setItem(\"theme\", theme);\n    } catch (e) {\n      /* ignore */\n    }\n  }, [theme]);\n\n  const toggleTheme = () => setTheme((t) => (t === \"dark\" ? \"light\" : \"dark\"));\n\n  const [account, setAccount] = useState(\"\");\n  const [balance, setBalance] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [ownerAddress, setOwnerAddress] = useState(\"\");\n  const [purchaseHistory, setPurchaseHistory] = useState(() => {\n    try {\n      const raw = localStorage.getItem(\"purchaseHistory\");\n      return raw ? JSON.parse(raw) : [];\n    } catch (e) {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    if (!window.ethereum) alert(\"Please install MetaMask!\");\n  }, []);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"MetaMask not installed!\");\n    try {\n      // ethers v5 Web3Provider\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      setAccount(userAddress);\n\n      const balanceWei = await provider.getBalance(userAddress);\n      setBalance(ethers.utils.formatEther(balanceWei));\n\n      const marketContract = new ethers.Contract(contractAddress, MarketPlaceABI, signer);\n      setContract(marketContract);\n\n      await loadAllItems(marketContract);\n    } catch (err) {\n      console.error(\"Wallet connection failed:\", err);\n    }\n  };\n\n  const loadAllItems = async (marketContract) => {\n    if (!marketContract) return;\n    try {\n      setLoading(true);\n      const countBN = await marketContract.itemCount();\n      const count = countBN.toNumber();\n      const itemList = [];\n      for (let i = 1; i <= count; i++) {\n        const item = await marketContract.items(i);\n        itemList.push(item);\n      }\n      setItems(itemList);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      console.error(\"Failed to load items:\", err);\n    }\n  };\n\n  const listItem = async () => {\n    if (!contract) return alert(\"Connect wallet first\");\n    if (!name || !price) return alert(\"Enter name and price\");\n\n    try {\n  const tx = await contract.ListItems(name, ethers.utils.parseEther(price), { gasLimit: 500000 });\n      await tx.wait();\n      await loadAllItems(contract);\n      setName(\"\");\n      setPrice(\"\");\n    } catch (err) {\n      console.error(\"Failed to list item:\", err);\n    }\n  };\n\n  const buyItem = async (id, itemPrice) => {\n    if (!contract) return alert(\"Connect wallet first\");\n    try {\n      const tx = await contract.buyItem(id, { value: itemPrice, gasLimit: 500000 });\n      const txHash = tx.hash;\n      await tx.wait();\n      // record purchase in history (find item name)\n      try {\n        const idStr = id && id.toString ? id.toString() : String(id);\n        const item = items.find((it) => (it.Id && it.Id.toString ? it.Id.toString() : String(it.Id)) === idStr);\n        const record = {\n          id: idStr,\n          name: item ? item.name : \"-\",\n          price: ethers.utils.formatEther(itemPrice),\n          txHash,\n          date: new Date().toISOString(),\n        };\n        const next = [record, ...purchaseHistory].slice(0, 100);\n        setPurchaseHistory(next);\n        try {\n          localStorage.setItem(\"purchaseHistory\", JSON.stringify(next));\n        } catch (e) {\n          /* ignore storage errors */\n        }\n      } catch (e) {\n        console.warn(\"Could not record purchase\", e);\n      }\n\n      await loadAllItems(contract);\n    } catch (err) {\n      console.error(\"Failed to buy item:\", err);\n    }\n  };\n\n  const clearHistory = () => {\n    setPurchaseHistory([]);\n    try {\n      localStorage.removeItem(\"purchaseHistory\");\n    } catch (e) {\n      /* ignore */\n    }\n  };\n\n  const transferItem = async (id, toAddress) => {\n    if (!contract) return alert(\"Connect wallet first\");\n    if (!toAddress) return alert(\"Enter recipient address\");\n    try {\n      const tx = await contract.transferItem(id, toAddress, { gasLimit: 500000 });\n      await tx.wait();\n      await loadAllItems(contract);\n    } catch (err) {\n      console.error(\"Failed to transfer item:\", err);\n    }\n  };\n\n  const getItemsByOwner = async () => {\n    if (!contract) return alert(\"Connect wallet first\");\n    if (!ownerAddress) return alert(\"Enter owner address\");\n    try {\n      const ids = await contract.getItemByOwner(ownerAddress);\n      const ownedItems = [];\n      for (let id of ids) {\n        const item = await contract.items(id);\n        ownedItems.push(item);\n      }\n      setItems(ownedItems);\n    } catch (err) {\n      console.error(\"Failed to get items by owner:\", err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2 className=\"title\">Flow Marketplace (Simplified)</h2>\n\n        <div style={{ display: \"flex\", gap: 10, alignItems: \"center\" }}>\n          <button className=\"btn ghost\" onClick={toggleTheme} title=\"Toggle theme\" aria-label=\"Toggle theme\">\n            {theme === \"dark\" ? (\n              <>\n                <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"><path d=\"M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z\"/></svg>\n                Light\n              </>\n            ) : (\n              <>\n                <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"><path d=\"M6.76 4.84l-1.8-1.79L3.17 4.84l1.79 1.79 1.8-1.79zM1 13h3v-2H1v2zm10 9h2v-3h-2v3zm7.03-2.03l1.79 1.79 1.79-1.79-1.79-1.79-1.79 1.79zM20 11v2h3v-2h-3zM4.22 19.78l1.79-1.79-1.79-1.79L2.43 18l1.79 1.78zM11 1h2v3h-2V1zm7.78 4.22l-1.79 1.79 1.79 1.79 1.79-1.79-1.79-1.79z\"/></svg>\n                Dark\n              </>\n            )}\n          </button>\n\n          <input\n            className=\"input\"\n            placeholder=\"Search items...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            style={{ width: 220 }}\n          />\n\n          {account ? (\n            <div className=\"wallet-info\">\n              <p><b>Address:</b> {account}</p>\n              <p><b>Balance:</b> {balance} FLOW / ETH</p>\n            </div>\n          ) : (\n            <button className=\"btn\" onClick={connectWallet} aria-label=\"Connect Wallet\">\n              <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\"><path d=\"M21 7H3a1 1 0 00-1 1v10a2 2 0 002 2h16a2 2 0 002-2V8a1 1 0 00-1-1zm-1 10H4V9h16v8zM7 11h10v2H7z\"/></svg>\n              Connect\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div className=\"section\">\n        <h3>List Item</h3>\n        <div className=\"form-row\">\n          <input\n            className=\"input\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <input\n            className=\"input small\"\n            placeholder=\"Price in FLOW/ETH\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n          />\n          <button className=\"btn\" onClick={listItem}>List Item</button>\n        </div>\n      </div>\n\n      <div className=\"section\">\n        <h3>All Items</h3>\n        {loading ? (\n          <div className=\"items-grid\">\n            {Array.from({ length: 6 }).map((_, i) => (\n              <div className=\"item-card skeleton\" key={`skeleton-${i}`}>\n                <div className=\"skeleton-title\" />\n                <div className=\"skeleton-line\" />\n                <div className=\"skeleton-line short\" />\n              </div>\n            ))}\n          </div>\n        ) : items.length === 0 ? (\n          <p className=\"muted\">No items available</p>\n        ) : (\n          <div className=\"items-grid\">\n            {items\n              .filter((it) => (it.name || \"\").toLowerCase().includes(query.toLowerCase()))\n              .map((item, idx) => (\n                <ItemCard\n                  key={item.Id ? item.Id.toString() : idx}\n                  item={item}\n                  account={account}\n                  buyItem={buyItem}\n                  transferItem={transferItem}\n                  index={idx}\n                />\n              ))}\n          </div>\n        )}\n      </div>\n\n      <div className=\"section\">\n        <h3>Purchase History</h3>\n        {purchaseHistory.length === 0 ? (\n          <div className=\"secondary muted\">No purchases yet</div>\n        ) : (\n          <div style={{ marginBottom: 12 }}>\n            <button className=\"btn ghost\" onClick={clearHistory}>Clear History</button>\n          </div>\n        )}\n        {purchaseHistory.length > 0 && (\n          <div className=\"items-grid\">\n            {purchaseHistory.map((p) => (\n              <div className=\"item-card\" key={p.txHash}>\n                <div className=\"item-meta\">\n                  <div>\n                    <div className=\"muted\">ID: {p.id}</div>\n                    <div>{p.name}</div>\n                  </div>\n                  <div className=\"item-price\">{p.price} FLOW</div>\n                </div>\n                <div className=\"muted\">Tx: <span style={{wordBreak:'break-all'}}>{p.txHash}</span></div>\n                <div className=\"muted\">When: {new Date(p.date).toLocaleString()}</div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        <h3>Get Items by Owner</h3>\n        <div className=\"form-row\">\n          <input\n            className=\"input\"\n            placeholder=\"Owner address\"\n            value={ownerAddress}\n            onChange={(e) => setOwnerAddress(e.target.value)}\n          />\n          <button className=\"btn ghost\" onClick={getItemsByOwner}>Get Items</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}